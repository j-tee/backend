# Generated by Django 5.2.6 on 2025-09-30 16:39

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('REVENUE', 'Revenue'), ('EXPENSE', 'Expense')], max_length=20)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'account_types',
                'ordering': ['code', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='bookkeeping.account')),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='bookkeeping.accounttype')),
            ],
            options={
                'db_table': 'accounts',
                'ordering': ['code', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('total_budget', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('actual_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('variance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='budgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'budgets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('budgeted_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('actual_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('variance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('notes', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_lines', to='bookkeeping.account')),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_lines', to='bookkeeping.budget')),
            ],
            options={
                'db_table': 'budget_lines',
            },
        ),
        migrations.CreateModel(
            name='FinancialPeriod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('period_type', models.CharField(choices=[('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed'), ('LOCKED', 'Locked')], default='OPEN', max_length=20)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_periods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'financial_periods',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddField(
            model_name='budget',
            name='financial_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='bookkeeping.financialperiod'),
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entry_number', models.CharField(max_length=50, unique=True)),
                ('entry_type', models.CharField(choices=[('SALE', 'Sale'), ('PURCHASE', 'Purchase'), ('PAYMENT', 'Payment'), ('RECEIPT', 'Receipt'), ('TRANSFER', 'Transfer'), ('ADJUSTMENT', 'Adjustment'), ('OPENING_BALANCE', 'Opening Balance'), ('CLOSING', 'Closing Entry')], max_length=20)),
                ('description', models.TextField()),
                ('reference_id', models.UUIDField(blank=True, null=True)),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('POSTED', 'Posted'), ('REVERSED', 'Reversed')], default='DRAFT', max_length=20)),
                ('total_debit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_credit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('entry_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_entries', to=settings.AUTH_USER_MODEL)),
                ('posted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posted_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'journal_entries',
                'ordering': ['-entry_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LedgerEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entry_type', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], max_length=10)),
                ('debit_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('credit_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('description', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ledger_entries', to='bookkeeping.account')),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_entries', to='bookkeeping.journalentry')),
            ],
            options={
                'db_table': 'ledger_entries',
            },
        ),
        migrations.CreateModel(
            name='TrialBalance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_debits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_credits', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('is_balanced', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trial_balances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trial_balances',
                'ordering': ['-period_end'],
            },
        ),
        migrations.CreateModel(
            name='TrialBalanceEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('debit_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('credit_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trial_balance_entries', to='bookkeeping.account')),
                ('trial_balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='bookkeeping.trialbalance')),
            ],
            options={
                'db_table': 'trial_balance_entries',
            },
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['code'], name='accounts_code_1c75a8_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['account_type', 'is_active'], name='accounts_account_6b9bda_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='budgetline',
            unique_together={('budget', 'account')},
        ),
        migrations.AlterUniqueTogether(
            name='financialperiod',
            unique_together={('start_date', 'end_date')},
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['entry_number'], name='journal_ent_entry_n_60b5dc_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['entry_type', 'status'], name='journal_ent_entry_t_6427a5_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['entry_date', 'status'], name='journal_ent_entry_d_ca1dfb_idx'),
        ),
        migrations.AddIndex(
            model_name='journalentry',
            index=models.Index(fields=['reference_id'], name='journal_ent_referen_9d9766_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['journal_entry', 'account'], name='ledger_entr_journal_1af296_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['account', 'entry_type'], name='ledger_entr_account_ab8e20_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='trialbalance',
            unique_together={('period_start', 'period_end')},
        ),
        migrations.AlterUniqueTogether(
            name='trialbalanceentry',
            unique_together={('trial_balance', 'account')},
        ),
    ]
