# Generated by Django 5.2.6 on 2025-10-01 17:58

from django.db import migrations, models
import uuid


def assign_business_to_existing_data(apps, schema_editor):
    """Assign DataLogique Systems business to all existing products and suppliers."""
    Business = apps.get_model('accounts', 'Business')
    Product = apps.get_model('inventory', 'Product')
    Supplier = apps.get_model('inventory', 'Supplier')
    
    # Get the DataLogique Systems business
    business_id = uuid.UUID('43bec7a5-a10f-46fb-9ec1-22e087ba8b7d')
    try:
        business = Business.objects.get(id=business_id)
        
        # Assign business to all existing products
        Product.objects.filter(business__isnull=True).update(business=business)
        
        # Assign business to all existing suppliers
        Supplier.objects.filter(business__isnull=True).update(business=business)
    except Business.DoesNotExist:
        # Skip if business doesn't exist (e.g., in test environments)
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0007_add_business_scoping'),
    ]

    operations = [
        migrations.RunPython(assign_business_to_existing_data, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='product',
            name='business',
            field=models.ForeignKey(
                on_delete=models.CASCADE,
                related_name='products',
                to='accounts.business',
            ),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='business',
            field=models.ForeignKey(
                on_delete=models.CASCADE,
                related_name='suppliers',
                to='accounts.business',
            ),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('business', 'sku')},
        ),
        migrations.AlterUniqueTogether(
            name='supplier',
            unique_together={('business', 'name')},
        ),
    ]
