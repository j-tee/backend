# Generated by custom edit: add nullable business FK to Stock and backfill to DataLogique Systems
from django.db import migrations, models
import uuid


def backfill_stock_business(apps, schema_editor):
    Business = apps.get_model('accounts', 'Business')
    Stock = apps.get_model('inventory', 'Stock')
    StockProduct = apps.get_model('inventory', 'StockProduct')
    BusinessWarehouse = apps.get_model('inventory', 'BusinessWarehouse')

    # Use the DataLogique Systems business id used in earlier migrations
    datalogique_id = uuid.UUID('43bec7a5-a10f-46fb-9ec1-22e087ba8b7d')
    try:
        biz = Business.objects.get(id=datalogique_id)
    except Business.DoesNotExist:
        # Nothing to backfill if business doesn't exist; skip
        return

    # For each stock, try to determine the business from its stock products' warehouses
    # Prefer warehouse->business_link, fallback to product.business
    stocks = Stock.objects.all()
    for s in stocks:
        # Get related stock products
        sps = StockProduct.objects.filter(stock_id=s.id).select_related('warehouse')
        determined = None
        for sp in sps:
            # Try to get BusinessWarehouse link via warehouse
            try:
                bw = BusinessWarehouse.objects.filter(warehouse_id=sp.warehouse_id).first()
                if bw and bw.business_id:
                    determined = bw.business_id
                    break
            except Exception:
                pass
            # fallback to product.business
            try:
                prod = sp.product
                if prod and prod.business_id:
                    determined = prod.business_id
                    break
            except Exception:
                pass

        # If we found a candidate business id, set it. Else default to DataLogique Systems.
        if determined:
            s.business_id = determined
        else:
            s.business = biz
        s.save(update_fields=['business_id'])


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0019_stockproduct_calculated_quantity'),
    ]

    operations = [
        migrations.AddField(
            model_name='stock',
            name='business',
            field=models.ForeignKey(blank=True, null=True, on_delete=models.CASCADE, related_name='stocks', to='accounts.business'),
        ),
        migrations.RunPython(backfill_stock_business, migrations.RunPython.noop),
    ]
