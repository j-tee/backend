# Generated by Django 5.2.6 on 2025-10-14 17:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0006_remove_user_subscription_status_and_more'),
        ('inventory', '0018_remove_transferauditentry_transfer_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RoleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('level', models.CharField(choices=[('PLATFORM', 'Platform Level'), ('BUSINESS', 'Business Level'), ('STOREFRONT', 'Storefront Level')], max_length=20)),
                ('permission_codenames', models.JSONField(default=list, help_text='List of permission codenames to assign')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'role_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scope', models.CharField(choices=[('PLATFORM', 'Platform-wide'), ('BUSINESS', 'Business-specific'), ('STOREFRONT', 'Storefront-specific')], default='BUSINESS', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiry for temporary role assignments', null=True)),
            ],
            options={
                'db_table': 'user_roles',
                'ordering': ['-assigned_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='role',
            options={'ordering': ['level', 'name']},
        ),
        migrations.AddField(
            model_name='role',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='role',
            name='is_system_role',
            field=models.BooleanField(default=False, help_text='System roles cannot be deleted'),
        ),
        migrations.AddField(
            model_name='role',
            name='level',
            field=models.CharField(choices=[('PLATFORM', 'Platform Level'), ('BUSINESS', 'Business Level'), ('STOREFRONT', 'Storefront Level')], default='BUSINESS', max_length=20),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.ForeignKey(blank=True, help_text='DEPRECATED: Use roles (many-to-many) instead', null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.role'),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('codename', models.CharField(help_text="Machine-readable permission code (e.g., 'can_approve_sales')", max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('SALES', 'Sales & POS'), ('INVENTORY', 'Inventory Management'), ('CUSTOMERS', 'Customer Management'), ('REPORTS', 'Reports & Analytics'), ('USERS', 'User Management'), ('SETTINGS', 'Settings & Configuration'), ('PLATFORM', 'Platform Administration'), ('FINANCE', 'Financial Operations')], max_length=20)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('READ', 'Read/View'), ('UPDATE', 'Update/Edit'), ('DELETE', 'Delete'), ('APPROVE', 'Approve'), ('EXPORT', 'Export'), ('IMPORT', 'Import'), ('MANAGE', 'Full Management')], max_length=20)),
                ('resource', models.CharField(help_text="Resource this permission applies to (e.g., 'sale', 'product')", max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'permissions',
                'ordering': ['category', 'resource', 'action'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='permissions_categor_cbf739_idx'), models.Index(fields=['codename'], name='permissions_codenam_5f0327_idx')],
            },
        ),
        migrations.AddField(
            model_name='role',
            name='permissions',
            field=models.ManyToManyField(blank=True, related_name='roles', to='accounts.permission'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['level', 'is_active'], name='roles_level_ed4165_idx'),
        ),
        migrations.AddField(
            model_name='userrole',
            name='assigned_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userrole',
            name='business',
            field=models.ForeignKey(blank=True, help_text='If set, role applies only to this business', null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.business'),
        ),
        migrations.AddField(
            model_name='userrole',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assignments', to='accounts.role'),
        ),
        migrations.AddField(
            model_name='userrole',
            name='storefront',
            field=models.ForeignKey(blank=True, help_text='If set, role applies only to this storefront', null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.storefront'),
        ),
        migrations.AddField(
            model_name='userrole',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, help_text='User roles with scope (Platform/Business/Storefront)', related_name='users', through='accounts.UserRole', through_fields=('user', 'role'), to='accounts.role'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['user', 'is_active'], name='user_roles_user_id_4ec42c_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['role', 'is_active'], name='user_roles_role_id_57352b_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['business', 'is_active'], name='user_roles_busines_acdb62_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role', 'business', 'storefront')},
        ),
    ]
