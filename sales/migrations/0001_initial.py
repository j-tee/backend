# Generated by Django 5.2.6 on 2025-09-30 16:39

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('outstanding_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CreditTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('CREDIT_SALE', 'Credit Sale'), ('PAYMENT', 'Payment'), ('ADJUSTMENT', 'Adjustment'), ('REFUND', 'Refund')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference_id', models.UUIDField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credit_transactions', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_transactions', to='sales.customer')),
            ],
            options={
                'db_table': 'credit_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_type', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Card'), ('MOBILE', 'Mobile Money'), ('CREDIT', 'Credit'), ('MIXED', 'Mixed Payment')], max_length=20)),
                ('status', models.CharField(choices=[('COMPLETED', 'Completed'), ('PENDING', 'Pending'), ('REFUNDED', 'Refunded'), ('PARTIAL', 'Partial'), ('CANCELLED', 'Cancelled')], default='COMPLETED', max_length=20)),
                ('type', models.CharField(choices=[('RETAIL', 'Retail'), ('WHOLESALE', 'Wholesale')], default='RETAIL', max_length=20)),
                ('amount_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('receipt_number', models.CharField(max_length=100, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to='sales.customer')),
                ('storefront', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='inventory.storefront')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sales',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('refund_type', models.CharField(choices=[('FULL', 'Full Refund'), ('PARTIAL', 'Partial Refund'), ('EXCHANGE', 'Exchange')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('PROCESSED', 'Processed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_refunds', to=settings.AUTH_USER_MODEL)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to=settings.AUTH_USER_MODEL)),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_refunds', to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='sales.sale')),
            ],
            options={
                'db_table': 'refunds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('MOMO', 'Mobile Money'), ('CARD', 'Card'), ('PAYSTACK', 'Paystack'), ('STRIPE', 'Stripe'), ('BANK_TRANSFER', 'Bank Transfer')], max_length=20)),
                ('status', models.CharField(choices=[('SUCCESSFUL', 'Successful'), ('PENDING', 'Pending'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='SUCCESSFUL', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='sales.customer')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL)),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='sales.sale')),
            ],
            options={
                'db_table': 'payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_items', to='inventory.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_items', to='sales.sale')),
                ('stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_items', to='inventory.stock')),
            ],
            options={
                'db_table': 'sales_items',
            },
        ),
        migrations.CreateModel(
            name='RefundItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('refund', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_items', to='sales.refund')),
                ('sale_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refund_items', to='sales.saleitem')),
            ],
            options={
                'db_table': 'refund_items',
            },
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['phone'], name='customers_phone_91048b_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['email'], name='customers_email_92e882_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['outstanding_balance'], name='customers_outstan_a60afc_idx'),
        ),
        migrations.AddIndex(
            model_name='credittransaction',
            index=models.Index(fields=['customer', 'created_at'], name='credit_tran_custome_adece4_idx'),
        ),
        migrations.AddIndex(
            model_name='credittransaction',
            index=models.Index(fields=['transaction_type', 'created_at'], name='credit_tran_transac_5168f4_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['storefront', 'created_at'], name='sales_storefr_f3f356_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['user', 'created_at'], name='sales_user_id_41e2ac_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['customer', 'status'], name='sales_custome_d9e23d_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['receipt_number'], name='sales_receipt_d1cdd9_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['type', 'created_at'], name='sales_type_80e37e_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['sale', 'status'], name='refunds_sale_id_7259a3_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['status', 'created_at'], name='refunds_status_df4b9c_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['sale', 'status'], name='payments_sale_id_c6e2c6_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['customer', 'payment_date'], name='payments_custome_bad26e_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_method', 'status'], name='payments_payment_749428_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='payments_transac_a1f824_idx'),
        ),
        migrations.AddIndex(
            model_name='saleitem',
            index=models.Index(fields=['sale', 'product'], name='sales_items_sale_id_2ac924_idx'),
        ),
        migrations.AddIndex(
            model_name='saleitem',
            index=models.Index(fields=['product', 'stock'], name='sales_items_product_603c5c_idx'),
        ),
        migrations.AddIndex(
            model_name='refunditem',
            index=models.Index(fields=['refund', 'sale_item'], name='refund_item_refund__a588ca_idx'),
        ),
    ]
