# Generated by Django 5.2.6 on 2025-10-16 08:14

from django.db import migrations


def create_walk_in_customers_for_existing_businesses(apps, schema_editor):
    """Create walk-in customer for all existing businesses."""
    Business = apps.get_model('accounts', 'Business')
    Customer = apps.get_model('sales', 'Customer')
    
    WALK_IN_PHONE = '+233000000000'
    WALK_IN_NAME = 'Walk-In-Customer'
    
    created_count = 0
    skipped_count = 0
    
    for business in Business.objects.all():
        _, created = Customer.objects.get_or_create(
            business=business,
            phone=WALK_IN_PHONE,
            defaults={
                'name': WALK_IN_NAME,
                'customer_type': 'RETAIL',
                'created_by': None,
            }
        )
        if created:
            created_count += 1
        else:
            skipped_count += 1
    
    print(f'Walk-in customer migration: {created_count} created, {skipped_count} already existed')


def reverse_walk_in_customers(apps, schema_editor):
    """Remove auto-created walk-in customers (optional reverse operation)."""
    Customer = apps.get_model('sales', 'Customer')
    
    WALK_IN_PHONE = '+233000000000'
    
    # Delete walk-in customers
    deleted_count, _ = Customer.objects.filter(
        phone=WALK_IN_PHONE
    ).delete()
    
    print(f'Walk-in customer rollback: {deleted_count} deleted')


class Migration(migrations.Migration):

    dependencies = [
        ('sales', '0008_migrate_credit_sales_to_ar'),
        ('accounts', '0010_link_membership_rbac_roles'),  # Ensure Business model is available
    ]

    operations = [
        migrations.RunPython(
            create_walk_in_customers_for_existing_businesses,
            reverse_walk_in_customers
        ),
    ]
