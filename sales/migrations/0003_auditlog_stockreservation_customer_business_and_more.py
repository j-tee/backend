# Generated by Django 5.2.6 on 2025-10-03 22:15

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0004_user_platform_role'),
        ('inventory', '0011_transfer_received_at_transfer_received_by_and_more'),
        ('sales', '0002_add_stock_product_to_saleitem'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('sale.created', 'Sale Created'), ('sale.updated', 'Sale Updated'), ('sale.completed', 'Sale Completed'), ('sale.cancelled', 'Sale Cancelled'), ('sale_item.added', 'Sale Item Added'), ('sale_item.updated', 'Sale Item Updated'), ('sale_item.removed', 'Sale Item Removed'), ('payment.created', 'Payment Created'), ('payment.updated', 'Payment Updated'), ('refund.requested', 'Refund Requested'), ('refund.approved', 'Refund Approved'), ('refund.rejected', 'Refund Rejected'), ('refund.processed', 'Refund Processed'), ('stock.reserved', 'Stock Reserved'), ('stock.committed', 'Stock Committed'), ('stock.released', 'Stock Released'), ('customer.created', 'Customer Created'), ('customer.updated', 'Customer Updated'), ('credit.adjusted', 'Credit Adjusted')], db_index=True, max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('event_data', models.JSONField(blank=True, default=dict, help_text='JSON data about the event')),
                ('description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'db_table': 'sales_audit_logs',
                'ordering': ['-timestamp'],
                'permissions': [('view_sales_audit', 'Can view sales audit logs')],
            },
        ),
        migrations.CreateModel(
            name='StockReservation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('cart_session_id', models.CharField(db_index=True, help_text='Sale ID or session ID for cart', max_length=255)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('COMMITTED', 'Committed'), ('RELEASED', 'Released'), ('CANCELLED', 'Cancelled')], db_index=True, default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('released_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stock_reservations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='accounts.business'),
        ),
        migrations.AddField(
            model_name='customer',
            name='contact_person',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='credit_blocked',
            field=models.BooleanField(default=False, help_text='Block customer from making credit purchases'),
        ),
        migrations.AddField(
            model_name='customer',
            name='credit_terms_days',
            field=models.IntegerField(default=30, help_text='Number of days for credit terms', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='customer',
            name='customer_type',
            field=models.CharField(choices=[('RETAIL', 'Retail'), ('WHOLESALE', 'Wholesale')], default='RETAIL', max_length=20),
        ),
        migrations.AddField(
            model_name='sale',
            name='amount_paid',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount already paid', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AddField(
            model_name='sale',
            name='business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sales', to='accounts.business'),
        ),
        migrations.AddField(
            model_name='sale',
            name='cart_session_id',
            field=models.CharField(blank=True, db_index=True, help_text='Session ID for cart functionality', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='sale',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sale',
            name='manager_override',
            field=models.BooleanField(default=False, help_text='Manager approved despite credit limit exceeded'),
        ),
        migrations.AddField(
            model_name='sale',
            name='override_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='overridden_sales', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sale',
            name='override_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sale',
            name='subtotal',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Sum of line items before discount', max_digits=12),
        ),
        migrations.AddField(
            model_name='saleitem',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='saleitem',
            name='discount_percentage',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))]),
        ),
        migrations.AddField(
            model_name='saleitem',
            name='product_name',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='saleitem',
            name='product_sku',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='saleitem',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='customer',
            name='credit_limit',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Maximum credit amount allowed', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='customer',
            name='outstanding_balance',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current outstanding balance', max_digits=12),
        ),
        migrations.AlterField(
            model_name='sale',
            name='amount_due',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Remaining amount to be paid', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='sale',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='sale',
            name='discount_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='sale',
            name='payment_type',
            field=models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Card'), ('MOBILE', 'Mobile Money'), ('CREDIT', 'Credit'), ('MIXED', 'Mixed Payment')], default='CASH', max_length=20),
        ),
        migrations.AlterField(
            model_name='sale',
            name='receipt_number',
            field=models.CharField(db_index=True, max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='sale',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('PARTIAL', 'Partial'), ('REFUNDED', 'Refunded'), ('CANCELLED', 'Cancelled')], db_index=True, default='DRAFT', max_length=20),
        ),
        migrations.AlterField(
            model_name='sale',
            name='storefront',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sales', to='inventory.storefront'),
        ),
        migrations.AlterField(
            model_name='sale',
            name='tax_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='sale',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='discount_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sale_items', to='inventory.product'),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='quantity',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='tax_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='total_price',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12),
        ),
        migrations.AlterField(
            model_name='saleitem',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))]),
        ),
        migrations.AlterUniqueTogether(
            name='customer',
            unique_together={('business', 'phone')},
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['business', 'name'], name='customers_busines_813b1f_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['credit_blocked', 'is_active'], name='customers_credit__fbaeca_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['business', 'storefront', 'created_at'], name='sales_busines_0df27d_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['status', 'created_at'], name='sales_status_9b9998_idx'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='sales.customer'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='sales.payment'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='refund',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='sales.refund'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='sales.sale'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='sale_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='sales.saleitem'),
        ),
        migrations.AddField(
            model_name='auditlog',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_audit_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stockreservation',
            name='stock_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='inventory.stockproduct'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['event_type', 'timestamp'], name='sales_audit_event_t_5ccc72_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['sale', 'timestamp'], name='sales_audit_sale_id_02e7d8_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['customer', 'timestamp'], name='sales_audit_custome_927852_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'timestamp'], name='sales_audit_user_id_f9883e_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['stock_product', 'status'], name='stock_reser_stock_p_f33c00_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['cart_session_id', 'status'], name='stock_reser_cart_se_3ca0ee_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['expires_at', 'status'], name='stock_reser_expires_789668_idx'),
        ),
    ]
