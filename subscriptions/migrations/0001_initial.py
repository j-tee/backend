# Generated by Django 5.2.6 on 2025-09-30 16:39

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentGatewayConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gateway', models.CharField(choices=[('PAYSTACK', 'Paystack'), ('STRIPE', 'Stripe'), ('MOMO', 'Mobile Money')], max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('public_key', models.CharField(blank=True, max_length=255, null=True)),
                ('secret_key', models.CharField(blank=True, max_length=255, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('api_url', models.URLField(blank=True, null=True)),
                ('test_mode', models.BooleanField(default=True)),
                ('supported_currencies', models.JSONField(blank=True, default=list)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_gateway_configs',
                'ordering': ['gateway'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('billing_cycle', models.CharField(choices=[('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], max_length=20)),
                ('max_users', models.PositiveIntegerField(default=1)),
                ('max_storefronts', models.PositiveIntegerField(default=1)),
                ('max_products', models.PositiveIntegerField(default=100)),
                ('max_transactions_per_month', models.PositiveIntegerField(default=1000)),
                ('features', models.JSONField(blank=True, default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('is_trial', models.BooleanField(default=False)),
                ('trial_days', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subscription_plans',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('MOMO', 'Mobile Money'), ('PAYSTACK', 'Paystack'), ('STRIPE', 'Stripe'), ('BANK_TRANSFER', 'Bank Transfer')], max_length=20)),
                ('payment_status', models.CharField(choices=[('PAID', 'Paid'), ('PENDING', 'Pending'), ('FAILED', 'Failed'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('CANCELLED', 'Cancelled'), ('SUSPENDED', 'Suspended'), ('EXPIRED', 'Expired')], default='INACTIVE', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('auto_renew', models.BooleanField(default=True)),
                ('next_billing_date', models.DateField(blank=True, null=True)),
                ('is_trial', models.BooleanField(default=False)),
                ('trial_end_date', models.DateField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='subscriptions.subscriptionplan')),
            ],
            options={
                'db_table': 'subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UsageTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('USERS', 'Users'), ('STOREFRONTS', 'Storefronts'), ('PRODUCTS', 'Products'), ('TRANSACTIONS', 'Transactions'), ('STORAGE', 'Storage'), ('API_CALLS', 'API Calls')], max_length=20)),
                ('current_usage', models.PositiveIntegerField(default=0)),
                ('limit_value', models.PositiveIntegerField()),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('is_exceeded', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_tracking', to='subscriptions.subscription')),
            ],
            options={
                'db_table': 'usage_tracking',
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gateway', models.CharField(max_length=20)),
                ('event_type', models.CharField(choices=[('PAYMENT_SUCCESS', 'Payment Success'), ('PAYMENT_FAILED', 'Payment Failed'), ('SUBSCRIPTION_CREATED', 'Subscription Created'), ('SUBSCRIPTION_CANCELLED', 'Subscription Cancelled'), ('REFUND_PROCESSED', 'Refund Processed')], max_length=50)),
                ('event_id', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSED', 'Processed'), ('FAILED', 'Failed'), ('IGNORED', 'Ignored')], default='PENDING', max_length=20)),
                ('payload', models.JSONField(default=dict)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'webhook_events',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['gateway', 'event_type'], name='webhook_eve_gateway_bd092e_idx'), models.Index(fields=['status', 'created_at'], name='webhook_eve_status_e5466e_idx')],
                'unique_together': {('gateway', 'event_id')},
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('billing_period_start', models.DateField()),
                ('billing_period_end', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='subscriptions.subscription')),
            ],
            options={
                'db_table': 'invoices',
                'ordering': ['-issue_date'],
                'indexes': [models.Index(fields=['subscription', 'status'], name='invoices_subscri_cd89af_idx'), models.Index(fields=['invoice_number'], name='invoices_invoice_7778bc_idx'), models.Index(fields=['due_date', 'status'], name='invoices_due_dat_4b5593_idx')],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('payment_method', models.CharField(choices=[('MOMO', 'Mobile Money'), ('PAYSTACK', 'Paystack'), ('STRIPE', 'Stripe'), ('BANK_TRANSFER', 'Bank Transfer')], max_length=20)),
                ('status', models.CharField(choices=[('SUCCESSFUL', 'Successful'), ('PENDING', 'Pending'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('billing_period_start', models.DateField()),
                ('billing_period_end', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='subscriptions.subscription')),
            ],
            options={
                'db_table': 'subscription_payments',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['subscription', 'status'], name='subscriptio_subscri_e7dc37_idx'), models.Index(fields=['transaction_id'], name='subscriptio_transac_1c4996_idx'), models.Index(fields=['payment_date'], name='subscriptio_payment_9349ea_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['user', 'status'], name='subscriptio_user_id_8d58fd_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['status', 'end_date'], name='subscriptio_status_fc7385_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['next_billing_date'], name='subscriptio_next_bi_72377a_idx'),
        ),
        migrations.AddIndex(
            model_name='usagetracking',
            index=models.Index(fields=['subscription', 'metric_type'], name='usage_track_subscri_506e7f_idx'),
        ),
        migrations.AddIndex(
            model_name='usagetracking',
            index=models.Index(fields=['is_exceeded', 'period_end'], name='usage_track_is_exce_23f047_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usagetracking',
            unique_together={('subscription', 'metric_type', 'period_start', 'period_end')},
        ),
    ]
